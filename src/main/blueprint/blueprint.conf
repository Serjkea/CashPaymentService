blueprint {
    streamlets {
        file-payments-ingress = cashpaymentservice.FilePaymentsIngress
        participant-initialize-ingress = cashpaymentservice.ParticipantInitializeIngress
        payment-processing-streamlet = cashpaymentservice.PaymentProcessingStreamlet
        payment-checking-streamlet = cashpaymentservice.PaymentCheckingStreamlet
        payment-logging-egress = cashpaymentservice.PaymentLoggingEgress
    }
    topics {
        payments {
            producers = [file-payments-ingress.paymentsOut]
            consumers = [payment-checking-streamlet.paymentsIn]
        }
        participants {
            producers = [participant-initialize-ingress.participantsOut]
            consumers = [payment-processing-streamlet.participantsIn]
        }
        valid-payments {
            producers = [payment-checking-streamlet.validPaymentsOut]
            consumers = [payment-processing-streamlet.validPaymentsIn]
        }
        payment-checking-status {
            producers = [payment-checking-streamlet.checkStatusOut]
            consumers = [payment-logging-egress.checkStatusIn]
        }
        payment-processing-status {
            producers = [payment-processing-streamlet.processStatusOut]
            consumers = [payment-logging-egress.processStatusIn]
        }
    }
}